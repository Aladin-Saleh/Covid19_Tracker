<tableaucovid>
    <table class ="table table-hover" id="table" style="text-align:center;">
          <!--<th style={item.color} each={ item in state.items } >{item.title}</th>-->
      <th id="Country" style="color:rgb(219, 153, 10)" onclick={sort} class="sorted">Pays</th>
          <th id="NewConfirmed" style="color:blue" onclick={sort}>Nombre de nouveau cas</th>
          <th id="NewDeaths" style="color:red" onclick={sort}>Nombre de nouveau mort</th>
          <th id="NewRecovered" style="color:green" onclick={sort}>Nombre de nouveau cas soigner</th>
          <th id="TotalConfirmed" style="color:rgb(0, 0, 0)" onclick={sort}>Nombre total de cas</th>
          <th id="TotalDeaths" style="color:rgb(255, 0, 0)" onclick={sort}>Nombre total de mort</th>
        <th id="TotalRecovered" style="color:rgb(248, 2, 207)" onclick={sort}>Nombre total de cas soigner</th>

        <tr each={ tab in state.tableauFiltre }>
                <td ><a href="../html/country_info.html?country={tab["Country"]}"</a>{ tab["Country"] }</td>
                <td >{ tab["NewConfirmed"] }</td>
                <td >{ tab["NewDeaths"] }</td>
                <td >{ tab["NewRecovered"] }</td>
                <td >{ tab["TotalConfirmed"] }</td>
                <td >{ tab["TotalDeaths"] }</td>
                <td >{ tab["TotalRecovered"] }</td>
          </tr>
      </table>
    <script>
        export default {
            onBeforeMount(props, state) {
               state.filtertable = props.filtertable;
               state.tableauxGlobal = covid.getCountryInfo();
               console.log(state.filtertable.getFirst())
               state.nombreElement = state.filtertable.getNombreElement();
               for(let i = state.filtertable.getFirst(); i <state.nombreElement; i++)
                {
                   state.tableauBuf[i] = covid.getCountryInfo()[i];
                }
               state.tableauFiltre =state.tableauBuf;
            },
            onBeforeUpdate(props, state)
            {
                state.tableauFiltre = state.tableauxGlobal.filter(item => item["Country"].toLowerCase().includes(state.filtertable.getPays().toLowerCase()));

                if(state.nombreElement != state.filtertable.getNombreElement())
                {
                    state.nombreElement = state.filtertable.getNombreElement();
                     let bufTab = [];
                    bufTab = state.tableauFiltre;
                    state.tableauFiltre = [];
                    //console.log(parseInt(state.nombreElement,10) + parseInt(state.filtertable.getFirst(),10))
                     for(let i = 0; i <parseInt(state.nombreElement,10); i++)
                        {
                            //state.tableauFiltre[i] = covid.getCountryInfo()[i];
                            state.tableauFiltre.push(covid.getCountryInfo()[i]);
                        }
                        console.log(this.state.first)
                   //state.tableauFiltre =state.tableauxGlobal;
                }

                if(state.first != state.filtertable.getFirst())
                {
                    //console.log("next debug");
                    state.first = state.filtertable.getFirst();
                    let bufTab = [];
                    bufTab = state.tableauFiltre;
                    state.tableauFiltre = [];
                    
                     for(let i = state.filtertable.getFirst(); i <parseInt(state.nombreElement + state.filtertable.getFirst(),10); i++)
                      {
                        state.tableauFiltre.push(bufTab[i]); 
                      }
                    console.log(" CurrentPage = " + state.filtertable.getCurrentPage());
                }
                
            },
           /* reverse()
            {
                this.state.tableauFiltre = this.state.tableauxGlobal.reverse();
                this.update();
            },*/
            sort(e)
            {
                let cible = e.target.id
                console.log(cible)
                let all = document.getElementsByTagName('th')
                let elem = document.getElementById(cible)
                for(let i = 0; i < all.length; i++) {
                    if(all[i] != elem)
                        all[i].className = ''
                }
                if(elem.classList.contains('sorted')) {
                    elem.classList.add('sorted_reverse')
                    elem.classList.remove('sorted')
                    if(cible == "Country")
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (a[cible] > b[cible] ? -1 : 1))
                    else
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (parseInt(b[cible]) - parseInt(a[cible])))
                } else if(elem.classList.contains('sorted_reverse')) {
                    elem.classList.add('sorted')
                    elem.classList.remove('sorted_reverse')
                    if(cible == "Country")
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (a[cible] < b[cible] ? -1 : 1))
                    else
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (parseInt(a[cible]) - parseInt(b[cible])))
                } else {
                    elem.classList.add('sorted')
                    if(cible == "Country"){
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (a[cible] < b[cible] ? -1 : 1))
                    }
                    else{
                        this.state.tableauFiltre = this.state.tableauxGlobal.sort((a, b) => (parseInt(a[cible]) - parseInt(b[cible])))
                    }
                }
                this.state.tableauFiltre = this.state.tableauxGlobal
                this.update()
            },
            state: {
                filtertable: null,
                tableauxGlobal: [],
                tableauFiltre : [],
                tableauBuf : [],
                nombreElement : 20,
                first : 0
                
            }
        }
    </script>

    <style>
    th:not(.sorted):not(.sorted_reverse):not(.sorted_nosort):after {
    content: " \25B4\25BE"
}

.sorted:after {
    content: " \25B4"
}

.sorted_reverse:after {
    content: " \25BE"
}
    </style>
</tableaucovid>